import json
import logging
from typing import Dict, List, Any, Optional
from .ai_manager import AIManager

logger = logging.getLogger(__name__)

class MentalDriversArchitect:
    """Arquiteto de Drivers Mentais - Sistema de Ancoragem Psicol√≥gica"""

    def __init__(self, ai_manager: AIManager):
        self.ai_manager = ai_manager
        self.universal_drivers = self._load_universal_drivers()
        logger.info("Mental Drivers Architect inicializado com 19 drivers universais")

    def _load_universal_drivers(self) -> List[Dict[str, Any]]:
        """Carrega os 19 drivers mentais universais"""
        return [
            {
                "nome": "FERIDA EXPOSTA",
                "gatilho": "Dor n√£o resolvida",
                "mecanica": "Trazer √† consci√™ncia o que foi reprimido",
                "ativacao": "Voc√™ ainda [comportamento doloroso] mesmo sabendo que [consequ√™ncia]?",
                "categoria": "emocional_primario"
            },
            {
                "nome": "TROF√âU SECRETO", 
                "gatilho": "Desejo inconfess√°vel",
                "mecanica": "Validar ambi√ß√µes proibidas",
                "ativacao": "N√£o √© sobre dinheiro, √© sobre [desejo real oculto]",
                "categoria": "emocional_primario"
            },
            {
                "nome": "INVEJA PRODUTIVA",
                "gatilho": "Compara√ß√£o com pares",
                "mecanica": "Transformar inveja em combust√≠vel", 
                "ativacao": "Enquanto voc√™ [situa√ß√£o atual], outros como voc√™ [resultado desejado]",
                "categoria": "emocional_primario"
            },
            {
                "nome": "REL√ìGIO PSICOL√ìGICO",
                "gatilho": "Urg√™ncia existencial",
                "mecanica": "Tempo como recurso finito",
                "ativacao": "Quantos [per√≠odo] voc√™ ainda vai [desperd√≠cio]?",
                "categoria": "emocional_primario"
            },
            {
                "nome": "IDENTIDADE APRISIONADA",
                "gatilho": "Conflito entre quem √© e quem poderia ser",
                "mecanica": "Expor a m√°scara social",
                "ativacao": "Voc√™ n√£o √© [r√≥tulo limitante], voc√™ √© [potencial real]",
                "categoria": "emocional_primario"
            },
            {
                "nome": "CUSTO INVIS√çVEL",
                "gatilho": "Perda n√£o percebida",
                "mecanica": "Quantificar o pre√ßo da ina√ß√£o",
                "ativacao": "Cada dia sem [solu√ß√£o] custa [perda espec√≠fica]",
                "categoria": "emocional_primario"
            },
            {
                "nome": "AMBI√á√ÉO EXPANDIDA",
                "gatilho": "Sonhos pequenos demais",
                "mecanica": "Elevar o teto mental de possibilidades",
                "ativacao": "Se o esfor√ßo √© o mesmo, por que voc√™ est√° pedindo t√£o pouco?",
                "categoria": "emocional_primario"
            },
            {
                "nome": "DIAGN√ìSTICO BRUTAL",
                "gatilho": "Confronto com a realidade atual",
                "mecanica": "Criar indigna√ß√£o produtiva com status quo",
                "ativacao": "Olhe seus n√∫meros/situa√ß√£o. At√© quando voc√™ vai aceitar isso?",
                "categoria": "emocional_primario"
            },
            {
                "nome": "AMBIENTE VAMPIRO",
                "gatilho": "Consci√™ncia do entorno t√≥xico",
                "mecanica": "Revelar como ambiente atual suga energia/potencial",
                "ativacao": "Seu ambiente te impulsiona ou te mant√©m pequeno?",
                "categoria": "emocional_primario"
            },
            {
                "nome": "MENTOR SALVADOR",
                "gatilho": "Necessidade de orienta√ß√£o externa",
                "mecanica": "Ativar desejo por figura de autoridade que acredita neles",
                "ativacao": "Voc√™ precisa de algu√©m que veja seu potencial quando voc√™ n√£o consegue",
                "categoria": "emocional_primario"
            },
            {
                "nome": "CORAGEM NECESS√ÅRIA",
                "gatilho": "Medo paralisante disfar√ßado",
                "mecanica": "Transformar desculpas em decis√µes corajosas",
                "ativacao": "N√£o √© sobre condi√ß√µes perfeitas, √© sobre decidir apesar do medo",
                "categoria": "emocional_primario"
            },
            {
                "nome": "MECANISMO REVELADO",
                "gatilho": "Compreens√£o do como",
                "mecanica": "Desmistificar o complexo",
                "ativacao": "√â simplesmente [analogia simples], n√£o [complica√ß√£o percebida]",
                "categoria": "racional_complementar"
            },
            {
                "nome": "PROVA MATEM√ÅTICA",
                "gatilho": "Certeza num√©rica",
                "mecanica": "Equa√ß√£o irrefut√°vel",
                "ativacao": "Se voc√™ fizer X por Y dias = Resultado Z garantido",
                "categoria": "racional_complementar"
            },
            {
                "nome": "PADR√ÉO OCULTO",
                "gatilho": "Insight revelador",
                "mecanica": "Mostrar o que sempre esteve l√°",
                "ativacao": "Todos que conseguiram [resultado] fizeram [padr√£o espec√≠fico]",
                "categoria": "racional_complementar"
            },
            {
                "nome": "EXCE√á√ÉO POSS√çVEL",
                "gatilho": "Quebra de limita√ß√£o",
                "mecanica": "Provar que regras podem ser quebradas",
                "ativacao": "Diziam que [limita√ß√£o], mas [prova contr√°ria]",
                "categoria": "racional_complementar"
            },
            {
                "nome": "ATALHO √âTICO",
                "gatilho": "Efici√™ncia sem culpa",
                "mecanica": "Validar o caminho mais r√°pido",
                "ativacao": "Por que sofrer [tempo longo] se existe [atalho comprovado]?",
                "categoria": "racional_complementar"
            },
            {
                "nome": "DECIS√ÉO BIN√ÅRIA",
                "gatilho": "Simplifica√ß√£o radical",
                "mecanica": "Eliminar zona cinzenta",
                "ativacao": "Ou voc√™ [a√ß√£o desejada] ou aceita [consequ√™ncia dolorosa]",
                "categoria": "racional_complementar"
            },
            {
                "nome": "OPORTUNIDADE OCULTA",
                "gatilho": "Vantagem n√£o percebida",
                "mecanica": "Revelar demanda/chance √≥bvia mas ignorada",
                "ativacao": "O mercado est√° gritando por [solu√ß√£o] e ningu√©m est√° ouvindo",
                "categoria": "racional_complementar"
            },
            {
                "nome": "M√âTODO VS SORTE",
                "gatilho": "Caos vs sistema",
                "mecanica": "Contrastar tentativa aleat√≥ria com caminho estruturado",
                "ativacao": "Sem m√©todo voc√™ est√° cortando mata com foice. Com m√©todo, est√° na autoestrada",
                "categoria": "racional_complementar"
            }
        ]

    def create_custom_drivers(self, context: Dict[str, Any]) -> Dict[str, Any]:
        """Cria drivers mentais customizados baseado no contexto"""

        logger.info(f"üß† Criando drivers mentais customizados para {context.get('segmento', 'contexto')}")

        prompt = f"""
# ARQUITETO DE DRIVERS MENTAIS - SISTEMA DE ANCORAGEM PSICOL√ìGICA

Baseado no contexto fornecido, crie 7-10 DRIVERS MENTAIS CUSTOMIZADOS seguindo a estrutura completa.

## CONTEXTO:
{json.dumps(context, ensure_ascii=False, indent=2)[:4000]}

CRIE drivers seguindo esta estrutura JSON:

```json
{{
  "drivers_customizados": [
    {{
      "nome": "NOME IMPACTANTE (m√°x 3 palavras)",
      "gatilho_central": "A emo√ß√£o ou l√≥gica core",
      "definicao_visceral": "1-2 frases que capturam a ess√™ncia",
      "mecanica_psicologica": "Como funciona no c√©rebro",
      "momento_instalacao": "Quando plantar durante a jornada",
      "roteiro_ativacao": {{
        "pergunta_abertura": "Pergunta que exp√µe a ferida",
        "historia_analogia": "Hist√≥ria/analogia de 3-5 frases que ilustra o conceito",
        "metafora_visual": "Met√°fora visual que ancora na mem√≥ria",
        "comando_acao": "Comando que direciona o comportamento"
      }},
      "frases_ancoragem": [
        "Frase 1 pronta para usar",
        "Frase 2 que reativa o driver",
        "Frase 3 que intensifica a tens√£o"
      ],
      "prova_logica": {{
        "estatistica": "Dado relevante",
        "caso_exemplo": "Hist√≥ria real",
        "demonstracao": "Como provar na pr√°tica"
      }},
      "loop_reforco": "Como reativar em momentos posteriores",
      "categoria": "emocional_primario ou racional_complementar",
      "prioridade": "critica, alta ou media"
    }}
  ],
  "sequencia_estrategica": {{
    "fase_1_despertar": ["Driver para consci√™ncia"],
    "fase_2_desejo": ["Driver para amplifica√ß√£o"],
    "fase_3_decisao": ["Driver para press√£o"],
    "fase_4_direcao": ["Driver para caminho"]
  }},
  "momentos_criticos": {{
    "abertura": "Driver para quebra de padr√£o",
    "desenvolvimento": "Driver para constru√ß√£o de cren√ßa", 
    "climax": "Driver para pr√©-pitch",
    "fechamento": "Driver para urg√™ncia final"
  }}
}}
```

Retorne APENAS o JSON estruturado, SEM explica√ß√µes adicionais.
"""
        try:
            response = self.ai_manager.generate_text(prompt)
            response_json = json.loads(response)

            logger.info(f"‚úÖ Drivers mentais customizados criados com sucesso.")
            return response_json

        except Exception as e:
            logger.error(f"‚ùå Erro ao gerar drivers mentais: {str(e)}", exc_info=True)

            # Retorna drivers b√°sicos em caso de erro
            return {
                "drivers_customizados": [
                    {
                        "nome": "DIAGN√ìSTICO BRUTAL",
                        "gatilho_central": "Confronto com realidade atual",
                        "definicao_visceral": f"Expor a verdade dolorosa sobre a situa√ß√£o atual em {context.get('segmento', 'neg√≥cios')}",
                        "mecanica_psicologica": "Criar indigna√ß√£o produtiva que gera movimento",
                        "momento_instalacao": "Abertura - primeira quebra de padr√£o",
                        "roteiro_ativacao": {
                            "pergunta_abertura": f"Seus resultados em {context.get('segmento', 'neg√≥cios')} condizem com seu potencial real?",
                            "historia_analogia": "√â como olhar no espelho e ver que a pessoa refletida n√£o √© quem voc√™ planejou se tornar",
                            "metafora_visual": "Imagine um term√¥metro que finalmente mostra a temperatura real, n√£o a que voc√™ gostaria que fosse",
                            "comando_acao": "Pare de aceitar mediocre como normal"
                        },
                        "frases_ancoragem": [
                            "At√© quando voc√™ vai aceitar resultados que n√£o condizem com seu potencial?",
                            "A realidade n√£o negocia com suas desculpas",
                            "Diagn√≥stico honesto √© o primeiro passo para cura real"
                        ],
                        "categoria": "emocional_primario",
                        "prioridade": "critica"
                    }
                ],
                "sequencia_estrategica": {
                    "fase_1_despertar": ["DIAGN√ìSTICO BRUTAL"],
                    "fase_2_desejo": ["AMBI√á√ÉO EXPANDIDA"],
                    "fase_3_decisao": ["REL√ìGIO PSICOL√ìGICO"],
                    "fase_4_direcao": ["M√âTODO REVELADO"]
                }
            }

# Inst√¢ncia global para importa√ß√£o
from services.ai_manager import ai_manager
mental_drivers_architect = MentalDriversArchitect(ai_manager)